@{ type: deviceConfig }
{
    version: 0.0.1

    maxVulkanVersion: 1.3

    // We'll use the first profile that passes requiremetns
    // in the desired group.
    instanceInclude: [graphicsAbilitiesLib computeAbilitiesLib]
    sharedInstanceCriteria: {
        abilities: [
            appSpecific-graphics
            appSpecific-compute
        ]
    }


    instanceProfileGroups: [ {
            name: debugInstance
            usingLayers: true
            include: []
            sharedCriteria: {
                abilities: [debug]
            }
            profiles: [ {
                    name: v1.3
                    vulkanVersion: 1.3
                }, {
                    name: v1.2
                    vulkanVersion: 1.2
                }, {
                    name: v1.1
                    vulkanVersion: 1.1
                }, {
                    name: v1.0
                    vulkanVersion: 1.0
                }
            ]
            debugUtilsMessengers: [{
                    severity: [verbose_bit, info_bit, warning_bit, error_bit]
                    type: [general_bit, validation_bit, performance_bit]
            }]
            validationFeatures: {
                enabled: [
                    gpu_assisted,
                    best_practies,
                    //debug_printf,
                    synchronization_validation]
            }
        }, {
            name: releaseInstance
            usingLayers: false
            sharedCriteria: {
            }
            profiles: [ {
                    name: v1.3
                    vulkanVersion: 1.3
                }, {
                    name: v1.2
                    vulkanVersion: 1.2
                }, {
                    name: v1.1
                    vulkanVersion: 1.1
                }, {
                    name: v1.0
                    vulkanVersion: 1.0
                }
            ]
        }
    ]
    // selects which above profile group to use
    useInstanceProfileGroup: debugInstance

    deviceProfileGroups: [ {
            name: graphicsDevices
            include: [builtin, graphicsAbilities]
            sharedCriteria: {
                abilities: [appSpecific-graphics]
                builtinAbilities: [allDevices]
            }
            profiles: [ {
                    name: baller
                    // weird example
                    properties: {
                        core: [[deviceType eq discrete_gpu]
                               [limits_maxImageDimension2D ge 8192]
                               [limits_maxComputeWorkGroupCount_0 gt 0]
                               [limits_maxComputeWorkGroupCount_1 gt 0]
                               [limits_maxComputeWorkGroupCount_2 gt 0]
                        ]
                    }
                }, {
                    name: ish
                    properties: { core: [[deviceType eq integrated_gpu]] }
                }, {
                    name: goodLuck
                    properties: { core: [[deviceType eq virtual_gpu]] }
                }, {
                    name: feeb
                    vulkanVersion: 1.0
                }
            ]

            /* Each group specs a combination of queue families. The first group that
               matches the available queue family types and queue counts is selected.
               Each entry in the queues list denotes a uniqe queue family index available
               on the device, and all the queue families in the group will be requested.
               If none of the groups can be allocated on the physical device, then device
               creation fails for this profile group, even if a profile was found. The
               works structure in appConfig.hu will specify minimum devices for a
               particular profile group, which may be zero. Queue counts max at
               max(requires, desires). requires must be at least 1 (and probably will
               always just be 1.)
               The priorities are for each queue, up to the number of queues created. This
               is kind of weak sauce, but how does one assign priorities to a variable number
               of queues in a declarative configuration? The mind boggles. One could spec
               a minimum number of queues for the priority set (requires > 1), which selects
               a priority profile for that number of queues.
            */
            queueVillageProfiles: [ {
                    name: gcacat
                    // these come order-independent
                    queueVillage: [ {
                            criteria: {
                                abilities: [globalPriority]
                                queueFamilyProperties: {
                                    core: [[queueFlags has grphics_bit]
                                           [queueFlags has compute_bit]
                                           [queueCount ge 1]]
                                    globalPriority: [[priorityCount ge 2]]
                                }
                            }
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                            maxQueueCount: 8
                            globalPriority: high
                        }, {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags hasnot grphics_bit]
                                                 [queueFlags has compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }, {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags hasnot grphics_bit]
                                                 [queueFlags hasnot compute_bit]
                                                 [queueFlags has transfer_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 2
                            priorities: [1.0, 0.8]
                        }
                    ]
                }, {
                    name: gacat
                    queueVillage: [ {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags has grphics_bit]
                                                 [queueFlags hasnot compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }, {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags hasnot grphics_bit]
                                                 [queueFlags has compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }, {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags hasnot grphics_bit]
                                                 [queueFlags hasnot compute_bit]
                                                 [queueFlags has transfer_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 2
                            priorities: [1.0, 0.8]
                        }
                    ]
                }, {
                    name: gcat
                    queueVillage: [ {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags has grphics_bit]
                                                 [queueFlags has compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }, {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags has transfer_bit]
                                                 [queueFlags has compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }
                    ]
                }, {
                    name: gac
                    queueVillage: [ {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags has grphics_bit]
                                                 [queueFlags hasnot compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }, {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags hasnot grphics_bit]
                                                 [queueFlags has compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }
                    ]
                }, {
                    name: gct
                    queueVillage: [ {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags has grphics_bit]
                                                 [queueFlags has compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }
                    ]
                }
            ]
        }, {
            name: computeDevices
            include [builtin, computeAbilities]
            sharedCriteria: {
                abilities: [appSpecific-compute]
            }
            profiles: [ {
                    name: computeOnly
                    queueTypesExcluded: [graphics_bit]
                    properties: { core: [[deviceType eq discrete_gpu]] }
                }, {
                    name: highPerfGraphics
                    queueTypesIncluded: [graphics_bit]
                    properties: { core: [[deviceType eq discrete_gpu]] }
                }, {
                    name: any
                }
            ]
            queueVillageProfiles: [ {
                    name: cat
                    queueVillage: [ {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags has compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }, {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags hasnot compute_bit]
                                                 [queueFlags has transfer_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }
                    ]
                }, {
                    name: c
                    queueVillage: [ {
                            criteria: {
                                queueFamilyProperties: {
                                    vulkan_1_0: [[queueFlags has compute_bit]
                                                 [queueCount ge 1]]
                                }
                            }
                            maxQueueCount: 8
                            priorities: [1.0, 0.8, 0.8, 0.4, 1.0, 0.8, 0.8, 0.4]
                        }
                    ]
                }
            ]
        }
    ]
}
