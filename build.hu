@ { app: boma version: 0.0.4 }
{
    inherit: [construct]
    projectName: overground
    compileAndLinkOptions: [Werror]

    --generateSrc: {
        version: 0.0.1
        buildType: boilermaker
        sources: [og-boma.hu]
        postCheck: [./.boma-post]
    }

    --og: {
        version: 0.0.1
        includeDirs: [
            'og/gen/inc'
        ]
        --lib: {
            buildType: staticLib
            outputDir: $libDir
            outputName: og
            depends: [
                og-boma.hu
            ]
            sources: [
                'og/gen/src/*.cpp'
            ]
        }
    }

    --logger: {
        version: 0.0.1
        includeDirs: [
            'og/logger/gen/inc'
        ]
        --lib: {
            buildType: staticLib
            outputDir: $libDir
            outputName: logger
            depends: [
                og-boma.hu
            ]
            sources: [
                'og/logger/gen/src/*.cpp'
                'og/logger/src/*.cpp'
            ]
        }
        --test: {
            buildType: exe
            outputDir: $testDir
            outputName: test.logger
            sources: [
                'og/logger/main.cpp'
            ]
            libDirs: [$libDir]
            libs: [c, !..lib!$outputLibPath, !...og.lib!$outputLibPath, humon, fmt]
        }
    }

    --assetDb: {
        version: 0.0.1
        includeDirs: [
            'og/assetDb/gen/inc'
        ]
        --lib: {
            buildType: staticLib
            outputDir: $libDir
            outputName: assetDb
            depends: [
                og-boma.hu
            ]
            sources: [
                'og/assetDb/gen/src/*.cpp'
                'og/assetDb/src/*.cpp'
            ]
        }
        --test: {
            buildType: exe
            outputDir: $testDir
            outputName: test.assetDb
            sources: [
                'og/assetDb/main.cpp'
            ]
            libDirs: [$libDir]
            libs: [!..lib!$outputLibPath,
                   !...logger.lib!$outputLibPath,
                   !...og.lib!$outputLibPath,
                   fmt, humon, c]
        }
    }

    --tableau: {
        version: 0.0.1
        includeDirs: [
            'og/tableau/gen/inc'
        ]
        --lib: {
            buildType: staticLib
            outputDir: $libDir
            outputName: tableau
            depends: [
                og-boma.hu
            ]
            sources: [
                'og/tableau/gen/src/*.cpp'
                'og/tableau/src/*.cpp'
            ]
        }
        --test: {
            buildType: exe
            outputDir: $testDir
            outputName: test.tableau
            sources: [
                'og/tableau/main.cpp'
            ]
            libDirs: [$libDir]
            libs: [humon, c, !..lib!$outputLibPath]
        }
    }

    --abilities: {
        version: 0.0.1
        includeDirs: [
            'og/abilities/gen/inc'
        ]
        --lib: {
            buildType: staticLib
            outputDir: $libDir
            outputName: abilities
            depends: [
                og-boma.hu
            ]
            sources: [
                'og/abilities/gen/src/*.cpp'
                //'og/abilities/src/*.cpp'
            ]
        }
        --test: {
            buildType: exe
            outputDir: $testDir
            outputName: test.abilities
            sources: [
                'og/abilities/main.cpp'
            ]
            libDirs: [$libDir]
            libs: [!..lib!$outputLibPath,
                   !...logger.lib!$outputLibPath,
                   !...og.lib!$outputLibPath,
                   fmt, humon,
                   glfw, vulkan, dl, pthread, X11, Xxf86vm, Xrandr, Xi,
                   c]
        }
    }

    --vkRequirements: {
        version: 0.0.1
        includeDirs: [
            'og/vkRequirements/gen/inc'
        ]
        --lib: {
            buildType: staticLib
            outputDir: $libDir
            outputName: vkRequirements
            depends: [
                og-boma.hu
            ]
            sources: [
                'og/vkRequirements/gen/src/*.cpp'
                //'og/vkRequirements/src/*.cpp'
            ]
        }
        --test: {
            buildType: exe
            outputDir: $testDir
            outputName: test.vkRequirements
            sources: [
                'og/vkRequirements/main.cpp'
            ]
            libDirs: [$libDir]
            libs: [!..lib!$outputLibPath,
                   !...logger.lib!$outputLibPath,
                   !...og.lib!$outputLibPath,
                   fmt, humon,
                   glfw, vulkan, dl, pthread, X11, Xxf86vm, Xrandr, Xi,
                   c]
        }
    }

    --engine: {
        version: 0.0.1
        includeDirs: [
            'og/engine/gen/inc'
        ]
        --lib: {
            buildType: staticLib
            outputDir: $libDir
            outputName: engine
            depends: [
                og-boma.hu
            ]
            sources: [
                'og/engine/gen/src/*.cpp'
                'og/engine/src/*.cpp'
            ]
        }
        --test: {
            /* packages:
                vulkan-tools
                libvulkan-dev
                vulkan-validationlayers-dev
                spirv-tools
                libglfw3-dev
                libglm-dev
                libxxf86vm-dev
                libxi-dev
            */
            buildType: exe
            outputDir: $testDir
            outputName: test.engine
            sources: [
                'og/engine/main.cpp'
            ]
            libDirs: [$libDir]
            libs: [!..lib!$outputLibPath,
                   !...abilities.lib!$outputLibPath,
                   !...vkRequirements.lib!$outputLibPath,
                   !...assetDb.lib!$outputLibPath,
                   !...logger.lib!$outputLibPath,
                   !...og.lib!$outputLibPath,
                   fmt, humon,
                   glfw, vulkan, dl, pthread, X11, Xxf86vm, Xrandr, Xi,
                   c]
        }
    }

    --playground: {
        buildType: exe
        outputDir: $testDir
        outputName: pg
        namespace: playground
        sources: [
            'playground/main.cpp'
        ]
        libDirs: [$libDir]
        libs: [humon, c,
               !..assetDb.lib!$outputLibPath
               !..tableau.lib!$outputLibPath
               !..og.lib!$outputLibPath
               ]
    }
}
