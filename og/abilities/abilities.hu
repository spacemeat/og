@{ type: abilityCollection_t }
{
    abilityLibraries: {
        sharedAbilitiesLib: {
            include: []
            abilities: {
                std: {
                    sharedCriteria: {
                        desiredDeviceExtensions: [
                            // TODO: Only for full-screen Win32:
                            //VK_EXT_full_screen_exclusive
                        ]
                    }
                }
                debug: {
                    sharedCriteria: {
                        extensions: [
                            VK_EXT_debug_utils
                        ]
                        desiredLayers: [
                            VK_LAYER_KHRONOS_validation
                        ]
                        debugUtilsMessengers: [ {
                                severity: [verbose_bit, info_bit, warning_bit, error_bit]
                                type: [general_bit, validation_bit, performance_bit]
                            }
                        ]
                        validationFeatures: {
                            enabled: [
                                gpu_assisted,
                                best_practices,
                                //debug_printf,
                                synchronization_validation
                            ]
                        }
                    }
                    profiles: [ {
                            name: ok
                        }
                    ]
                }
                compute: {
                    sharedCriteria: {
                        abilities: []
                        queueTypesIncluded: [compute_bit]
                    }
                    profiles: [ {
                            name: ok
                        }
                    ]
                }
                graphics: {
                    sharedCriteria: {
                        abilities: []
                        queueTypesIncluded: [graphics_bit]
                    }
                    profiles: [ {
                            name: ok
                        }
                    ]
                }
            }
        }

        graphicsAbilities: {
            include: [sharedAbilitiesLib]
            abilities: {
                // This would notmally be in an app's specific abilities.hu
                appSpecific-graphics: {
                    profiles: [ {
                            abilities: [graphics, swapchain]
                            desiredAbilities: [synchronization2, multiview]
                            queueTypesIncluded: [compute_bit]
                        }
                    ]
                }
                multiview: {
                    enabled: true
                    sharedCriteria: { features: [multiview] }
                    profiles: [ {
                            name: 2+2
                            properties: {
                                multiview: [[maxMultiviewViewCount ge 4]]
                            }
                        } {
                            name: 2+1
                            properties: {
                                multiview: [[maxMultiviewViewCount eq 3]]
                            }
                        } {
                            name: 2
                            properties: {
                                multiview: [[maxMultiviewViewCount eq 2]]
                            }
                        }
                    ]
                }
            }
        }

        computeAbilities: {
            include: [sharedAbilitiesLib]
            abilities: {
                appSpecific-compute: {
                    profiles: [ {
                            abilities: [compute]
                        }
                    ]
                }
            }
        }
    }
}

/*

Need to get all providers for e/l for instance structurechain init.

Need to check e/l against available.

Need to get all providers for f/p/qfp/de for suitability structurechain init.

Need to check f/p/qfp/de against suitability structurechain.

Need to clone suitability to utilized.

Need to check and set f/p/qfp/de against utilized.

Need to generate structures from utilized.

*/
